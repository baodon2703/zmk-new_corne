#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk-helpers/key-labels/42.h"
#include <zmk-helpers/helper.h>

#define XXX &none
#define ___ &trans

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define NAV 3

/* Global defaults */

#define QUICK_TAP_MS 175

&sk { // Sticky Key
  release-after-ms = <900>;
  quick-release;
};

&sl { // Sticky Layer - Allow sticky mods to chord across sticky layers.
  ignore-modifiers;
};

&lt { // Layer Tap
  flavor = "balanced";
  tapping-term-ms = <200>;
  quick-tap-ms = <QUICK_TAP_MS>;
};

/* Homerow mods */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS)                                 \
  ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";            \
               tapping-term-ms = <280>; quick-tap-ms = <QUICK_TAP_MS>;         \
               require-prior-idle-ms = <150>; hold-trigger-on-release;         \
               hold-trigger-key-positions = <TRIGGER_POS>;)

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS) // Left-hand HRMs.
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS) // Right-hand HRMs.

// Hack: Make HRM combos tap-only (cf, ZMK issue #544).
#define ZMK_COMBO_8(NAME, TAP, POS, LAYERS, COMBO_MS, IDLE_MS, HOLD, SIDE)     \
  MAKE_HRM(hm_combo_##NAME, &kp, TAP, SIDE THUMBS)                             \
  ZMK_COMBO_6(NAME, &hm_combo_##NAME HOLD 0, POS, LAYERS, COMBO_MS, IDLE_MS)

// HRM Helpers
#define MAKE_HRM_KEYS(NAME, MODS, BINDING)                                         \
  ZMK_MOD_MORPH(NAME, bindings = <BINDING>, <BINDING>; mods = <MODS>;)

/* Default Code For Mouse */
&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

// Soft Off
&soft_off { hold-time-ms = <2000>; };

/* Custom Keys */
#define MAKE_MOD_MORPH(NAME, MODS, BINDING, MODDED_BINDING)                                         \
  ZMK_MOD_MORPH(NAME, bindings = <BINDING>, <MODDED_BINDING>; mods = <MODS>;)

MAKE_MOD_MORPH(dot_excl, (MOD_LSFT|MOD_RSFT), &kp PERIOD, &kp EXCL);

/ {
    behaviors {
        #define SHIFT_MORPH(NAME, UN, SH)                             \
            NAME: NAME {                                              \
                compatible = "zmk,behavior-mod-morph";                \
                /* 0 binding-cells: used like &NAME with no args */   \
                #binding-cells = <0>;                                 \
                /* Trigger on either Shift (works with OSM too) */    \
                mods = <(MOD_LSFT|MOD_RSFT)>;                         \
                bindings = <UN>, <SH>;                                \
            };

        SHIFT_MORPH(at_hash,         &kp AT,      &kp HASH)
        SHIFT_MORPH(rvs_SEMI,        &kp COLON,   &kp SEMI)
        SHIFT_MORPH(cma_qns,         &kp COMMA,   &kp QMARK)
        // SHIFT_MORPH(dot_excl,        &kp PERIOD,  &kp EXCL)
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <44 45>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "ENTHIUM";
            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp ESC       &kp Z         &kp Y         &kp U         &kp O         &rvs_SEMI                     &kp UP                        &kp Q         &kp L         &kp D         &kp P         &kp X         &kp BSPC
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp W         &kp C         &kp I         &kp E         &kp A         &cma_qns        &kp LEFT      &kp ENTER      &kp RIGHT      &kp K         &kp H         &kp T         &kp N         &kp S         &kp F
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp BSPC      &kp SQT       &kp MINUS     &kp PLUS      &dot_excl     &at_hash           ___        &kp DOWN                      &kp J         &kp M         &kp G         &kp B         &kp V         &kp ENTER
//╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ╰─────────────┴─────────────┴─────────────╯ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              &lt 1 SPACE    &kp SPACE     &lt 2 TAB                                                   &lt 2 ESC     &kp R         &mo 3
//                                          ╰─────────────┴─────────────┴─────────────╯                                             ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        layer_1 {
            display-name = "NUMBER";
            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        ___           ___           ___           ___           ___           ___                       &mmv MOVE_UP                &kp KP_MULTIPLY  &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp DLLR         ___
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        ___           ___           ___        &kp LPAR      &kp RPAR         ___        &mmv MOVE_LEFT  &mkp LCLK   &mmv MOVE_RIGHT  &kp KP_PLUS    &kp KP_N4     &kp KP_N5     &kp KP_N6   &kp KP_MINUS  &kp KP_EQUAL
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        ___           ___           ___           ___           ___           ___             ___      &mmv MOVE_DOWN                &kp KP_DIVIDE   &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp AMPS         ___
//╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ╰─────────────┴─────────────┴─────────────╯ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                  ___           ___           ___                                                    &kp KP_COMMA    &kp KP_DOT    &kp KP_N0
//                                          ╰─────────────┴─────────────┴─────────────╯                                             ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        layer_2 {
            display-name = "SYMBOL";
            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        ___        &kp TILDE2    &kp LT        &kp GT        &kp PIPE      &kp DLLR                     &mmv MOVE_UP                      ___         &kp LBRC      &kp RBRC        ___           ___           ___
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        ___        &kp EXCL      &kp ASTRK     &kp FSLH      &kp EQUAL     &kp AMPS       &mmv MOVE_LEFT  &mkp LCLK   &mmv MOVE_RIGHT     ___         &kp LPAR      &kp RPAR        ___           ___           ___
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        ___        &kp GRAVE     &kp MINUS     &kp PLUS      &kp PRCNT     &kp CARET          ___      &mmv MOVE_DOWN                     ___         &kp LBKT      &kp RBKT        ___           ___           ___
//╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ╰─────────────┴─────────────┴─────────────╯ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                  ___           ___           ___                                                         ___           ___           ___
//                                          ╰─────────────┴─────────────┴─────────────╯                                             ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        layer_3 {
            display-name = "NAV";
            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        ___           ___           ___           ___           ___          ___                       &mmv MOVE_UP                       ___           ___         &kp UP          ___           ___           ___
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        ___           ___           ___           ___           ___          ___        &mmv MOVE_LEFT  &mkp LCLK   &mmv MOVE_RIGHT       ___        &kp LEFT      &kp DOWN      &kp RIGHT        ___           ___
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        ___         &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHIFT     ___              ___      &mmv MOVE_DOWN                     ___           ___           ___           ___           ___           ___
//╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ╰─────────────┴─────────────┴─────────────╯ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                  ___           ___          ___                                                          ___           ___           ___
//                                          ╰─────────────┴─────────────┴─────────────╯                                             ╰─────────────┴─────────────┴─────────────╯
            >;
        };
    };
};


//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//       0             1             2             3             4             5                             6                             7             8              9            10            11            12
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      13            14            15            16            17            18              19            20             21             22            23             24            25            26            27
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      28            29            30            31            32            33              34            35                            36            37             38            39            40            41
//╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ╰─────────────┴─────────────┴─────────────╯ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                                42            43            44                                                          45             46            47
//                                          ╰─────────────┴─────────────┴─────────────╯                                             ╰─────────────┴─────────────┴─────────────╯